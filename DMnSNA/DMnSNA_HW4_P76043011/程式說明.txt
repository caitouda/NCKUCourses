助教：
    您好。
    程式思路說明：這次作業我採取的演算法是基於密度的方法DBSCAN。首先，我根據半徑和密度掃描一遍所有的點判斷出所有的核心點，每個核心點有自己的鄰域。接著，取出一個核心點為該點創建一個cluster類別，此時cluster類別里的點就是此核心點的鄰域，掃描其餘核心點，判斷是否包含在鄰域里，是的話則加入核心點的鄰域中沒有被分類的點，當這個類別擴充完畢，選擇下一個沒有在cluster類別里的核心點創建一個新的cluster類別，以此類推。最後，可能會有噪音點沒有包含在任何一個cluster類別裡面，還有可能出現最後一個cluster裡面的點不滿足要求的密度，那是因為輸入的半徑和密度沒有控制好，導致最後一個核心點的鄰域的點大部分都提前被其他cluster類別分類了。
    程式運行說明：輸入資料在“DMnSNA_HW4_P76043011\src\DBSCAN\data”資料夾中，打開“DMnSNA_HW4_P76043011\src\DBSCAN”資料夾中的“DBSCAN.java”運行程式，需要分別輸入半徑大小和密度閾值（因為有兩份輸入資料，所以需要輸入兩次參數），在屏幕上可以看到按照cluter類別順序輸出的點，按照作業輸出要求的結果會寫在txt檔案中，第一份資料輸出的結果在“DMnSNA_HW4_P76043011\src\DBSCAN\0_result.txt”中，第二份資料輸出的結果在“DMnSNA_HW4_P76043011\src\DBSCAN\1_result.txt”中。
                                                             何超越